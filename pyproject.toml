[project]
name = "django-subscriptions-rt"
requires-python = ">=3.11"
keywords = []
license = {text = "MIT"}
readme = "README.md"
authors = [
    {name = "Reef Technologies", email = "opensource@reef.pl"},
]
classifiers = [
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = [
    "version",
]
dependencies = [
    "django>=3.2,<6",
    "djangorestframework",
    "django-money>=3.0,<4",
    "more-itertools>=10.6.0",
    "python-dateutil>=2.9.0.post0",
    "requests>=2.32.3",
    "tenacity>=9.0.0",
    "pydantic>=1.10,<1.11",
    "environs>=14.1.1,<15",
]

[project.optional-dependencies]
apple_in_app = [
    "PyJWT>=2.6,<3",
    "pyOpenSSL>=23.2,<24",
    "cryptography>=41.0.1",
]
google_in_app = [
    "google-api-python-client>=2.88.0,<3",
    "oauth2client==4.1.3",
]
default_plan = [
    "django-constance>=3.0,<5",
]

[dependency-groups]
test = [
    "freezegun>=1.5.2",
    "ipdb>=0.13.13",
    "psycopg2-binary>=2.9.10",
    "pytest>=8.4.1",
    "pytest-apiver>=0.1.0",
    "pytest-asyncio>=1.0.0",
    "pytest-django>=4.11.1",
    "pytest-xdist>=3.8.0",
    "python-dotenv>=1.1.1",
]
lint = [
    "codespell[toml]>=2.4.1",
    "django-stubs>=5.2.1",
    "djangorestframework-stubs>=3.16.0",
    "mypy>=1.16.1",
    "ruff>=0.12.2",
    "types-freezegun>=1.1.10",
    "types-python-dateutil>=2.9.0.20250708",
    "types-requests>=2.32.4.20250611",
]
release = [
    "towncrier>=24.8.0",
]

[project.urls]
"Source" = "https://github.com/reef-technologies/django-subscriptions-rt"
"Issue Tracker" = "https://github.com/reef-technologies/django-subscriptions-rt/issues"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
pythonpath = ["."]  # allow for `import tests` in test files
target_package_name = "subscriptions"  # required by pytest-apiver
DJANGO_SETTINGS_MODULE="tests.settings"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "D",
    "E", "F", "I", "UP",
    "TC005",
]
ignore = [
    "D100", "D105", "D107", "D200", "D202", "D203", "D205", "D212", "D400", "D401", "D415",
    "D101", "D102", "D103", "D104", # TODO remove once we have docstring for all public methods
    "D106",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test/**" = ["D", "F403", "F405"]

[tool.codespell]
skip = "*.min.js,pdm.lock"
ignore-words-list = "datas"

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/reef-technologies/django-subscriptions-rt/releases/tag/v{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/reef-technologies/django-subscriptions-rt/issues/{issue})"

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Doc"
showcontent = true

[[tool.towncrier.type]]
directory = "infrastructure"
name = "Infrastructure"
showcontent = true

[tool.mypy]

[[tool.mypy.overrides]]
module = [
    "nox",
    "pytest",
    "tests.*",
]
ignore_missing_imports = true
