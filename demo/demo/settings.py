"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from __future__ import annotations

from os import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-05xv#t=!60$9mkn39hn2-)_mexac&gttcesbk%xqi(xtkamns7"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS: list[str] = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "constance",
    "constance.backends.database",
    "demo",
    "subscriptions.v0.apps.AppConfig",
    "pgactivity",
    "pglock",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "subscriptions.v0.middleware.SubscriptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
    ]
}

ROOT_URLCONF = "demo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "demo.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": environ.get("POSTGRES_DB", "demo"),
        "USER": environ.get("POSTGRES_USER", "demo"),
        "PASSWORD": environ.get("POSTGRES_PASSWORD", "demo"),
        "HOST": environ.get("POSTGRES_HOST", "localhost"),
        "PORT": environ.get("POSTGRES_PORT", "5432"),
    },
}

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"
CONSTANCE_CONFIG = {
    "SUBSCRIPTIONS_DEFAULT_PLAN_ID": (0, "Default plan ID", int),
}

SUBSCRIPTIONS_PAYMENT_PROVIDERS = [
    "subscriptions.v0.providers.dummy.DummyProvider",
    "subscriptions.v0.providers.paddle.PaddleProvider",
    "subscriptions.v0.providers.google_in_app.GoogleInAppProvider",
    "subscriptions.v0.providers.apple_in_app.AppleInAppProvider",
]

PADDLE_VENDOR_ID = environ.get("PADDLE_VENDOR_ID")
PADDLE_VENDOR_AUTH_CODE = environ.get("PADDLE_VENDOR_AUTH_CODE")
PADDLE_ENDPOINT = environ.get("PADDLE_ENDPOINT")
PADDLE_TEST_EMAIL = environ.get("PADDLE_TEST_EMAIL")

GOOGLE_PLAY_PACKAGE_NAME = environ.get("GOOGLE_PLAY_PACKAGE_NAME")
GOOGLE_PLAY_SERVICE_ACCOUNT = environ.get("GOOGLE_PLAY_SERVICE_ACCOUNT")

# ID of the application that we're trying to verify.
APPLE_BUNDLE_ID = environ.get("APPLE_BUNDLE_ID")
# Shared secret that can be used to ask Apple about receipts. Obtainable from
# https://help.apple.com/app-store-connect/#/devf341c0f01
APPLE_SHARED_SECRET = environ.get("APPLE_SHARED_SECRET")
# Optional. One can obtain it from https://www.apple.com/certificateauthority/
# Current certificate is also embedded into the application.
# APPLE_ROOT_CERTIFICATE_PATH = environ.get('APPLE_ROOT_CERTIFICATE_PATH')

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
